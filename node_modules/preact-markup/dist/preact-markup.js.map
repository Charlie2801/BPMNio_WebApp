{"version":3,"file":"preact-markup.js","sources":["../src/parse-markup.js","../src/to-vdom.js","../src/index.js","../src/markup-to-vdom.js"],"sourcesContent":["let parserDoc;\n\n/** Parse markup into a DOM using the given mimetype.\n *\t@param {String} markup\n */\nexport default function parseMarkup(markup, type) {\n\tlet doc,\n\t\tmime = type==='html' ? 'text/html' : 'application/xml',\n\t\tparserError, wrappedMarkup, tag;\n\n\t// wrap with an element so we can find it after parsing, and to support multiple root nodes\n\tif (type==='html') {\n\t\ttag = 'body';\n\t\twrappedMarkup = '<!DOCTYPE html>\\n<html><body>'+markup+'</body></html>';\n\t}\n\telse {\n\t\ttag = 'xml';\n\t\twrappedMarkup = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<xml>'+markup+'</xml>';\n\t}\n\n\t// if available (browser support varies), using DOMPaser in HTML mode is much faster, safer and cleaner than injecting HTML into an iframe.\n\ttry {\n\t\tdoc = new DOMParser().parseFromString(wrappedMarkup, mime);\n\t} catch (err) {\n\t\tparserError = err;\n\t}\n\n\t// fall back to using an iframe to parse HTML (not applicable for XML, since DOMParser() for XML works in IE9+):\n\tif (!doc && type==='html') {\n\t\tdoc = parserDoc || (parserDoc = buildParserFrame());\n\t\tdoc.open();\n\t\tdoc.write(wrappedMarkup);\n\t\tdoc.close();\n\t}\n\n\tif (!doc) return;\n\n\t// retrieve our wrapper node\n\tlet out = doc.getElementsByTagName(tag)[0],\n\t\tfc = out.firstChild;\n\n\tif (markup && !fc) {\n\t\tout.error = 'Document parse failed.';\n\t}\n\n\t// pluck out parser errors\n\tif (fc && String(fc.nodeName).toLowerCase()==='parsererror') {\n\t\t// remove post/preamble to get just the error message as text\n\t\tfc.removeChild(fc.firstChild);\n\t\tfc.removeChild(fc.lastChild);\n\t\tout.error = (fc.textContent || fc.nodeValue || parserError || 'Unknown error');\n\t\t// remove the error from the DOM leaving things nice and tidy\n\t\tout.removeChild(fc);\n\t}\n\n\treturn out;\n}\n\n/** A shared frame is used for the fallback HTML parser, built on-demand. */\nfunction buildParserFrame() {\n\tif (document.implementation && document.implementation.createHTMLDocument) {\n\t\treturn document.implementation.createHTMLDocument('');\n\t}\n\tlet frame = document.createElement('iframe');\n\tframe.style.cssText = 'position:absolute; left:0; top:-999em; width:1px; height:1px; overflow:hidden;';\n\tframe.setAttribute('sandbox', 'allow-forms');\n\tdocument.body.appendChild(frame);\n\treturn frame.contentWindow.document;\n}\n","\nconst EMPTY_OBJ = {};\n\n// deeply convert an XML DOM to VDOM\nexport default function toVdom(node, visitor, h, options) {\n\twalk.visitor = visitor;\n\twalk.h = h;\n\twalk.options = options || EMPTY_OBJ;\n\treturn walk(node);\n}\n\nfunction walk(n, index, arr) {\n\tif (n.nodeType===3) {\n\t\tlet text = 'textContent' in n ? n.textContent : n.nodeValue || '';\n\n\t\tif (walk.options.trim!==false) {\n\t\t\tlet isFirstOrLast = index===0 || index===arr.length-1;\n\n\t\t\t// trim strings but don't entirely collapse whitespace\n\t\t\tif (text.match(/^[\\s\\n]+$/g) && walk.options.trim!=='all') {\n\t\t\t\ttext = ' ';\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttext = text.replace(/(^[\\s\\n]+|[\\s\\n]+$)/g, walk.options.trim==='all' || isFirstOrLast ? '' : ' ');\n\t\t\t}\n\t\t\t// skip leading/trailing whitespace\n\t\t\t// if (!text || text===' ' && arr.length>1 && (index===0 || index===arr.length-1)) return null;\n\t\t\tif ((!text || text===' ') && arr.length>1 && isFirstOrLast) return null;\n\t\t\t// if (!text && arr.length>1 && (index===0 || index===arr.length-1)) return null;\n\t\t\t// if (!text || text===' ') return null;\n\t\t}\n\t\treturn text;\n\t}\n\tif (n.nodeType!==1) return null;\n\tlet nodeName = String(n.nodeName).toLowerCase();\n\n\t// Do not allow script tags unless explicitly specified\n\tif (nodeName==='script' && !walk.options.allowScripts) return null;\n\n\tlet out = walk.h(\n\t\tnodeName,\n\t\tgetProps(n.attributes),\n\t\twalkChildren(n.childNodes)\n\t);\n\tif (walk.visitor) walk.visitor(out);\n\treturn out;\n}\n\nfunction getProps(attrs) {\n\tlet len = attrs && attrs.length;\n\tif (!len) return null;\n\tlet props = {};\n\tfor (let i=0; i<len; i++) {\n\t\tlet { name, value } = attrs[i];\n\t\tif (name.substring(0,2)==='on' && walk.options.allowEvents){\n\t\t\tvalue  = new Function(value); // eslint-disable-line no-new-func\n\t\t}\n\t\tprops[name] = value;\n\t}\n\treturn props;\n}\n\nfunction walkChildren(children) {\n\tlet c = children && Array.prototype.map.call(children, walk).filter(exists);\n\treturn c && c.length ? c : null;\n}\n\nlet exists = x => x;\n","import { h as defaultReviver, Component } from 'preact';\nimport markupToVdom from './markup-to-vdom';\n\nlet customReviver;\n\nexport default class Markup extends Component {\n\tstatic setReviver(h) {\n\t\tcustomReviver = h;\n\t}\n\n\tshouldComponentUpdate({ wrap, type, markup }) {\n\t\tlet p = this.props;\n\t\treturn wrap!==p.wrap || type!==p.type || markup!==p.markup;\n\t}\n\n\tsetComponents(components) {\n\t\tthis.map = {};\n\t\tif (components) {\n\t\t\tfor (let i in components) {\n\t\t\t\t// eslint-disable-next-line no-prototype-builtins\n\t\t\t\tif (components.hasOwnProperty(i)) {\n\t\t\t\t\tlet name = i.replace(/([A-Z]+)([A-Z][a-z0-9])|([a-z0-9]+)([A-Z])/g, '$1$3-$2$4').toLowerCase();\n\t\t\t\t\tthis.map[name] = components[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\trender({ wrap=true, type, markup, components, reviver, onError, 'allow-scripts':allowScripts, 'allow-events':allowEvents, trim, ...props }) {\n\t\tlet h = reviver || this.reviver || this.constructor.prototype.reviver || customReviver || defaultReviver,\n\t\t\tvdom;\n\n\t\tthis.setComponents(components);\n\n\t\tlet options = {\n\t\t\tallowScripts,\n\t\t\tallowEvents,\n\t\t\ttrim\n\t\t};\n\n\t\ttry {\n\t\t\tvdom = markupToVdom(markup, type, h, this.map, options);\n\t\t} catch (error) {\n\t\t\tif (onError) {\n\t\t\t\tonError({ error });\n\t\t\t}\n\t\t\telse if (typeof console!=='undefined' && console.error) {\n\t\t\t\tconsole.error(`preact-markup: ${error}`);\n\t\t\t}\n\t\t}\n\n\t\tif (wrap===false) return vdom || null;\n\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tlet c = props.hasOwnProperty('className') ? 'className' : 'class',\n\t\t\tcl = props[c];\n\t\tif (!cl) props[c] = 'markup';\n\t\telse if (cl.splice) cl.splice(0, 0, 'markup');\n\t\telse if (typeof cl==='string') props[c] += ' markup';\n\t\telse if (typeof cl==='object') cl.markup = true;\n\n\t\treturn h('div', props, vdom || null);\n\t}\n}\n","import parseMarkup from './parse-markup';\nimport toVdom from './to-vdom';\n\nconst EMPTY_OBJ = {};\n\n/** Convert markup into a virtual DOM.\n*\t@param {String} markup\t\tHTML or XML markup (indicate via `type`)\n*\t@param {String} [type=xml]\tA type to use when parsing `markup`. Either `xml` or `html`.\n*\t@param {Function} reviver\tThe JSX/hyperscript reviver (`h` function) to use. For example, Preact's `h` or `ReactDOM.createElement`.\n*\t@param {Object} [map]\t\tOptional map of custom element names to Components or variant element names.\n */\nexport default function markupToVdom(markup, type, reviver, map, options) {\n\tlet dom = parseMarkup(markup, type);\n\n\tif (dom && dom.error) {\n\t\tthrow new Error(dom.error);\n\t}\n\n\tlet body = dom && dom.body || dom;\n\tvisitor.map = map || EMPTY_OBJ;\n\tlet vdom = body && toVdom(body, visitor, reviver, options);\n\tvisitor.map = null;\n\n\n\treturn vdom && vdom.props && vdom.props.children || null;\n}\n\nfunction toCamelCase(name) {\n\treturn name.replace(/-(.)/g, (match, letter) =>letter.toUpperCase());\n}\n\nfunction visitor(node) {\n\tlet name = (node.type || '').toLowerCase(),\n\t\tmap = visitor.map;\n\n\t// eslint-disable-next-line no-prototype-builtins\n\tif (map && map.hasOwnProperty(name)){\n\t\tnode.type = map[name];\n\t\tnode.props = Object.keys(node.props || {}).reduce((attrs,attrName)=>{\n\t\t\tattrs[toCamelCase(attrName)] = node.props[attrName];\n\t\t\treturn attrs;\n\t\t},{});\n\t} else {\n\t\tnode.type =  name.replace(/[^a-z0-9-]/i,'');\n\t}\n\n}\n"],"names":["parserDoc","EMPTY_OBJ","walk","n","index","arr","nodeType","text","textContent","nodeValue","options","trim","isFirstOrLast","length","match","replace","nodeName","String","toLowerCase","allowScripts","children","c","out","h","attrs","len","props","i","name","substring","allowEvents","value","Function","getProps","attributes","childNodes","Array","prototype","map","call","filter","exists","visitor","let","customReviver","x","node","type","hasOwnProperty","Object","keys","reduce","attrName","letter","toUpperCase","setReviver","shouldComponentUpdate","ref","p","this","wrap","markup","setComponents","components","render","vdom","reviver","constructor","defaultReviver","dom","doc","parserError","wrappedMarkup","tag","mime","DOMParser","parseFromString","err","document","implementation","createHTMLDocument","frame","createElement","style","cssText","setAttribute","body","appendChild","contentWindow","buildParserFrame","open","write","close","getElementsByTagName","fc","firstChild","error","removeChild","lastChild","parseMarkup","Error","toVdom","markupToVdom","onError","console","cl","splice","Component"],"mappings":"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"}